<template>
    <div class="margin-top-container">

        <div v-for="(quiz,i) in quizzes" :key="i">
            <a :href="'/quiz/' + quiz.id">
                <div class="margin-top-between">
                
                    <div class="lesson-container">
                        <h2>{{ quiz.title }}</h2>
                        <p >{{ quiz.description }}</p>
                        <span>{{ quiz.user.name }}</span>
                        <div id="lesson-link">
                            L
                            <br>
                            E
                            <br>
                            S
                            <br>
                            S
                            <br>
                            O 
                            <br>
                            N
                        </div>
                    </div>
                </div>
            </a>
        </div>
        
        <!-- <div class="margin-top-between">
            <div class="quiz-container">
                <h2>Lorem ipsum dolor sit amet.</h2>
                <p >Lorem, ipsum dolor sit amet consectetur adipisicing elit. Recusandae, maiores?</p>
                <span>{{ user.name }}</span>
                <div id="quiz-link">
                    Q
                    <br>
                    U
                    <br>
                    I
                    <br>
                    Z
                </div>
            </div>
        </div> -->
    </div>
    
</template>

<script>
    export default {
        props: ["dataQuiz"],
      data() {
        return {
          quizzes:[]
        }
      },
      mounted() {
        this.quizzes = JSON.parse(this.dataQuiz);
      }
    }
  </script>



<template>
    <div>
        <div class="row justify-content-center">
            <div class="navigation">
                <a href="/create-lesson" id="lesson-nav" class="navlink active">Lesson</a>
                <a href="/create-quiz" id="quiz-nav" class="navlink">Quiz</a>
            </div>
            <div class="col-md-12 mb-12">
                
                <form enctype="multipart/form-data" class="lesson-form">
                    
                    <input class="form-control mb-6" placeholder="Title"
                    v-model="form.title"></input>
                    
                    <textarea class="form-control mb-1 form-control" placeholder="Body"
                    v-model="form.description"></textarea>
                    
                    
                        
                        <div>
                            <button @click="submitForm()" type="button" class="submitArticle btn upload">Submit</button>
                        </div>
                    </form>
                </div>
                
            </div>
        </div>
</template>
    <script>
        export default {
            props: ["dataUser"],
            data() {
                return {
                    user: [],
                    
                    form: {
                        title: "",
                        description: "",
                        
                    },
                }
            },
            methods: {
                submitForm() {
                    // axios.post("/api/lessons", this.form)
                    // .then((response) => {
                    //     window.location.href = '/users/' + this.user.id;
                    // })
                    axios({
                    method: 'post',
                    url: 'myurl',
                    data: bodyFormData,
                    headers: {'Content-Type': 'multipart/form-data' }
                    })
                    .then(function (response) {
                        //handle success
                        console.log(response);
                    })
                    .catch(function (response) {
                        //handle error
                        console.log(response);
                    });
                }
            },
            mounted() {
                var bodyFormData = new FormData();
                bodyFormData.append('userName', 'Fred');

            }
        }
    </script>












    <template>
    
    <div>
        <div class="navigation">
            <a href="/create-lesson" id="lesson-nav" class="navlink ">Lesson</a>
            <a href="/create-quiz" id="quiz-nav" class="navlink active ">Quiz</a>
        </div>
        <div class="steps">
            
            
            <!-- FIRST STEP -->
            
            <div class="step">
                <div class="step-header">
                    <div class="header">Firt Step</div>
                    <div class="subheader">Please determine your lessons Title and Description</div>
                </div>
                
                <div class="step-content one">
                    <form>
                        <el-input type="textarea" autosize placeholder="Title" v-model="form.title"></el-input>
                        <div style="margin: 20px 0;"></div>
                        <el-input type="textarea" :autosize="{ minRows: 2, maxRows: 4}" placeholder="Description" v-model="form.description"></el-input>
                        
                        <!-- button -->
                        <button @click="submitForm" type="button" class="next-btn">Next</button>
                    </form>
                </div>
            </div>
            
            
            <div class="step minimized"> <!--minimize step-->
                
                <!-- SECOND STEP -->
                <div class="step-header">
                    <div class="header">Second Step</div>
                    <div class="subheader">Add a title, content and an image!</div>
                </div>
                
                
                <div class="step-content two">
                    <form enctype="multipart/form-data" class="post-form">
                        <el-input type="textarea" autosize placeholder="Title" ></el-input>
                        <div style="margin: 20px 0;"></div>
                        <el-input type="textarea" :autosize="{ minRows: 2, maxRows: 4}" placeholder="Description">
                        </el-input>
                        <el-upload class="upload-demo" action="">
                            <el-button size="small" type="primary">Click to upload an image</el-button>
                            <div slot="tip" class="el-upload__tip">jpg/png files with a size less than 500kb</div>
                        </el-upload>
                        <br>
                        <button class="next-btn" type="button">Next</button>
                    </form>
                </div>
            </div>
            
            
            <!-- THIRD STEP  -->
            <div class="step minimized"> <!--minimize step-->
                <div class="step-header">
                    <div class="header">And finally step three!</div>
                    <div class="subheader">Last but not the least!</div>
                </div>
                
                <div class="step-content three">
                    <button class="close-btn" type="submit">Done</button>
                </div>
            </form>
        </div>
    </div>
</div>

</template>

<script>
    export default {
        data() {
            return {
                form: {
                    title: "",
                    description: "",
                }
            }
        },
        methods: {
            // handleUpload(result, file) {
            //     this.form.image = "/storage/" + result.name
            // },
            // submitForm() {
            //     axios.post("/api/lessons", this.form)
            // }
        },
        mounted() {

                let curOpen;
                
                $(document).ready(function() {
                    curOpen = $('.step')[0];
                    
                    $('.next-btn').on('click', function() {
                        let cur = $(this).closest('.step');
                        let next = $(cur).next();
                        $(cur).addClass('minimized');
                        setTimeout(function() {
                            $(next).removeClass('minimized');
                            curOpen = $(next);
                        }, 400);
                    });
                    
                    $('.close-btn').on('click', function() {
                        let cur = $(this).closest('.step');
                        $(cur).addClass('minimized');
                        curOpen = null;
                    });
                    
                    $('.step .step-content').on('click' ,function(e) {
                        e.stopPropagation();
                    });
                    
                    $('.step').on('click', function() {
                        if (!$(this).hasClass("minimized")) {
                            curOpen = null;
                            $(this).addClass('minimized');
                        }
                        else {
                            let next = $(this);
                            if (curOpen === null) {
                                curOpen = next;
                                $(curOpen).removeClass('minimized');
                            }
                            else {
                                $(curOpen).addClass('minimized');
                                setTimeout(function() {
                                    $(next).removeClass('minimized');
                                    curOpen = $(next);
                                }, 300);
                            }
                        }
                    });
                })
            }
        }
    </script>



    /////goood



    <template>
    <div id="app-vue">
      <div class="posts">
        <button class="btn btn-primary" @click="fetchposts">
          Fetch posts
        </button>

        <input
          class="add-search-input"
          type="text"
          v-model="newpost"
          @keyup.enter="addpost"
        >

        <div>
          <p v-if="submitting">Submitting...</p>
          <p v-if="loading">Loading...</p>

          <ul>
            <li v-for="post in posts">
              {{ post.title }} - {{ post.id }}
            </li>
          </ul>
        </div>
      </div>
    </div>
</template>

<script>
export default {
 data() {
    return {
      posts: [],
      loading: false,
      submitting: false,
      newpost: '',
    }
  },
  methods: {
    fetchposts() {
      this.loading = true;
      this.posts = [];

      axios.get('https://jsonplaceholder.typicode.com/posts')
        .then((response) => {
          const data = response.data;
          this.posts = data;
          this.loading = false;
        });
    },
    addpost() {
      this.submitting = true;
      axios.post('https://jsonplaceholder.typicode.com/posts', {
        title: this.newpost
      })
        .then((response) => {
          const data = response.data;
          this.posts.push(data);
          this.newpost = '';
          this.submitting = false;
        });
    }
  }
}
</script>